{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourceGroupName": {
      "defaultValue": "rg-yazy-adap-dev-usce",
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group."
      }
    },
    "sqlServerName": {
      "defaultValue": "sql-yazy-adap-dev-usce",
      "type": "string",
      "metadata": {
        "description": "The name of the Logical SQL Server."
      }
    },
    "synapseDWName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The Azure Synapse DW Name"
      }
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "test",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    }
  },
  "variables": {
    "logicAppResume": "[concat('la-resume-', parameters('synapseDWName'))]",
    "logicAppPause": "[concat('la-pause-', parameters('synapseDWName'))]",
    "sqlServerContributorID": "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
    "uniqueRolePauseGuid": "[guid(resourceId('Microsoft.Sql/servers', parameters('sqlServerName')), variables('sqlServerContributor'), resourceId('Microsoft.Logic/workflows', variables('logicAppPause')))]",
    "uniqueRoleResumeGuid": "[guid(resourceId('Microsoft.Sql/servers', parameters('sqlServerName')), variables('sqlServerContributor'), resourceId('Microsoft.Logic/workflows', variables('logicAppResume')))]",
    "sqlServerContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437')]"
  },
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/', parameters('synapseDWName'), '/pause?api-version=2019-05-01')]",
                "authentication": {
                  "type": "ManagedServiceIdentity"
                }
              },
              "runAfter": {}
            }
          },
          "parameters": {},
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "schedule": {
                  "hours": [
                    "18"
                  ],
                  "minutes": [
                    1
                  ]
                },
                "timeZone": "Eastern Standard Time"
              },
              "type": "Recurrence"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      },
      "name": "[concat('la-pause-', parameters('synapseDWName'))]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Display Name": "[concat('logic app: la-pause-', parameters('synapseDWName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "apiVersion": "2016-06-01"
    },
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/', parameters('synapseDWName'), '/resume?api-version=2019-05-01')]",
                "authentication": {
                  "type": "ManagedServiceIdentity"
                }
              },
              "runAfter": {}
            }
          },
          "parameters": {},
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "schedule": {
                  "hours": [
                    "8"
                  ],
                  "minutes": [
                    1
                  ]
                },
                "timeZone": "Eastern Standard Time"
              },
              "type": "Recurrence"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      },
      "name": "[concat('la-resume-', parameters('synapseDWName'))]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Display Name": "[concat('logic app: la-resume-', parameters('synapseDWName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "apiVersion": "2016-06-01"
    },
    {
      "apiVersion": "2020-04-01-preview",
      "type": "Microsoft.Sql/servers/providers/roleAssignments",
      "name": "[concat(parameters('sqlServerName'), '/Microsoft.Authorization/', guid(uniqueString(variables('logicAppResume'))))]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows/', variables('logicAppResume'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('sqlServerContributor')]",
        "principalId": "[reference(concat('Microsoft.Logic/workflows/', variables('logicAppResume')), '2019-05-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "apiVersion": "2020-04-01-preview",
      "type": "Microsoft.Sql/servers/providers/roleAssignments",
      "name": "[concat(parameters('sqlServerName'), '/Microsoft.Authorization/', guid(uniqueString(variables('logicAppPause'))))]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows/', variables('logicAppPause'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('sqlServerContributor')]",
        "principalId": "[reference(concat('Microsoft.Logic/workflows/', variables('logicAppPause')), '2019-05-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    }
  ],
  "outputs": {
    "synapse-dw-name": {
      "type": "string",
      "value": "[parameters('synapseDWName')]"
    }
  }
}
