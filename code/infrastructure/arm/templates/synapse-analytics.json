{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "ResourceGroupName": {
      "defaultValue": "rg-yazy-adap-dev-use2",
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group."
      }
    },
    "synapseAnalyticsWorkspace": {
      "type": "string"
    },
    "DataLakeStoreName": {
      "type": "string"
    },
    "DataLakeFileSystem": {
      "type": "string"
    },
    "sqlAdmin": {
      "type": "string"
    },
    "sqlAdministratorLoginPassword": {
      "type": "secureString",
      "defaultValue": ""
    },
    "allowAllConnections": {
      "type": "bool",
      "defaultValue": true
    },
    "grantWorkspaceIdentityControlForSql": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled"
    },
    "managedVirtualNetwork": {
      "type": "string",
      "allowedValues": [
        "default",
        ""
      ],
      "defaultValue": "default"
    },
    "storageRoleUniqueId": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "dev",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    },
    "storageLocation": {
      "defaultValue": "[resourceGroup().location]",
      "type": "String",
      "metadata": {
        "description": "Do not change this value if Data Lake Storage is placed in the same region as Synapse Workspace(recommended)."
      }
    }
  },
  "variables": {
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('DataLakeStoreName'), '.dfs.core.windows.net')]",
    "environmentSettings": {
      "dev": {
        "azureAdAdmin": "az.adap.nonproduction.owner"
      },
      "tst": {
        "azureAdAdmin": "az.adap.nonproduction.owner"
      },
      "prd": {
        "azureAdAdmin": "az.adap.production.owner"
      }
    },
    "currentEnvironmentSettings": "[variables('environmentSettings')[parameters('Env')]]"
  },
  "resources": [
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('synapseAnalyticsWorkspace')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Display Name": "[concat('synapse analytics: ', parameters('synapseAnalyticsWorkspace'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "identity": {
        "tenantId": "[subscription().tenantId]",
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', parameters('DataLakeFileSystem'))]"
      ],
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[parameters('DataLakeFileSystem')]"
        },
        "virtualNetworkProfile": {
          "computeSubnetId": ""
        },
        "sqlAdministratorLogin": "[parameters('sqlAdmin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "managedVirtualNetwork": "[parameters('managedVirtualNetwork')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2019-06-01-preview",
          "name": "allowAll",
          "location": "[resourceGroup().location]",
          "condition": "[parameters('allowAllConnections')]",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', parameters('synapseAnalyticsWorkspace'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        },
        {
          "apiVersion": "2019-06-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', parameters('synapseAnalyticsWorkspace'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "default",
          "properties": {
            "grantSqlControlToManagedIdentity": {
              "desiredState": "[parameters('grantWorkspaceIdentityControlForSql')]"
            }
          },
          "type": "managedIdentitySqlControlSettings"
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "name": "storageRoleDeploymentResource",
      "subscriptionId": "[subscription().subscriptionId]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', parameters('synapseAnalyticsWorkspace'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "name": "[concat(parameters('DataLakeStoreName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('synapseAnalyticsWorkspace'), '/', parameters('storageRoleUniqueId'))))]",
              "location": "[parameters('storageLocation')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', parameters('synapseAnalyticsWorkspace')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[parameters('DataLakeFileSystem')]",
      "type": "Microsoft.Resources/deployments",
      "subscriptionId": "[subscription().subscriptionId]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "name": "[concat(parameters('DataLakeStoreName'), '/default/', parameters('DataLakeFileSystem'))]",
              "apiVersion": "2018-02-01",
              "properties": {
                "publicAccess": "None"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}