{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Azure Machine Learning service workspace."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "basic",
      "allowedValues": [
        "basic",
        "enterprise"
      ],
      "metadata": {
        "description": "Specifies the sku, also referred as 'edition' of the Azure Machine Learning workspace."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the keyvault"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the keyvault"
      }
    },
    "ContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the container"
      }
    },
    "PublicAccess": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "Container",
        "Blob",
        "None"
      ],
      "metadata": {
        "description": "Level of public accessibility of the created container"
      }
    },
    "StorageAccountName": {
      "defaultValue": "stgyazyadaptstusw2",
      "type": "string",
      "metadata": {
        "description": "The name of the storage account."
      }
    },
    "AccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of storage account."
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "StorageKind": {
      "type": "string",
      "metadata": {
        "description": "The kind of storage account."
      },
      "defaultValue": "StorageV2",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage"
      ]
    },
    "AccessTier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "This setting is required if using Blob Storage as the storageKind, otherwise can be left blank"
      }
    },
    "ResourceGroupName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group."
      }
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "test",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    }
  },
  "variables": {
    "tenantId": "[subscription().tenantId]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('accountType')]"
      },
      "kind": "[parameters('storageKind')]",
      "tags": {
        "Display Name": "[concat('storage account: ', parameters('StorageAccountName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "[parameters('accessTier')]",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "name": "[concat(parameters('StorageAccountName'), '/default/', parameters('containerName'))]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "tags": {
        "Display Name": "[concat('storage container: ', parameters('containerName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "[parameters('publicAccess')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Display Name": "[concat('keyvault: ', parameters('keyVaultName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "properties": {
        "tenantId": "[variables('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": [
        ]
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[parameters('applicationInsightsName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Display Name": "[concat('application insights: ', parameters('applicationInsightsName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2019-11-01",
      "name": "[parameters('workspaceName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Display Name": "[concat('machine learning: ', parameters('workspaceName'))]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
      ],
      "identity": {
        "type": "systemAssigned"
      },
      "sku": {
        "tier": "[parameters('sku')]",
        "name": "[parameters('sku')]"
      },
      "properties": {
        "friendlyName": "[parameters('workspaceName')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults',parameters('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components',parameters('applicationInsightsName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]"
      }
    }
  ]
}
