{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "ResourceGroupName": {
      "defaultValue": "rg-yazy-adap-dev-usce",
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group."
      }
    },
    "DataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Name of the data factory. Must be globally unique."
      }
    },
    "ApplicationName": {
      "defaultValue": "ADAP",
      "type": "string",
      "metadata": {
        "description": "Name of the application, service, or workload the resource is associated with."
      }
    },
    "Approver": {
      "defaultValue": "approver@company.org",
      "type": "string",
      "metadata": {
        "description": "Person responsible for approving costs related to this resource."
      }
    },
    "BudgetAmount": {
      "defaultValue": "0",
      "type": "string",
      "metadata": {
        "description": "Money allocated for this application, service, or workload."
      }
    },
    "BusinessUnit": {
      "defaultValue": "CORP",
      "type": "string",
      "metadata": {
        "description": "Top-level division of your company that owns the subscription or workload the resource belongs to. In smaller organizations, this tag might represent a single corporate or shared top-level organizational element."
      }
    },
    "CostCenter": {
      "defaultValue": "8675-309",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "DR": {
      "defaultValue": "Mission-Critical",
      "type": "string",
      "metadata": {
        "description": "Business criticality of the application, workload, or service."
      }
    },
    "EndDate": {
      "defaultValue": "9999-12-31",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service is scheduled for retirement."
      }
    },
    "Env": {
      "defaultValue": "test",
      "type": "string",
      "metadata": {
        "description": "Deployment environment of the application, workload, or service."
      }
    },
    "Owner": {
      "defaultValue": "owner@company.org",
      "type": "string",
      "metadata": {
        "description": "Owner of the application, workload, or service."
      }
    },
    "Requester": {
      "defaultValue": "requester@company.org",
      "type": "string",
      "metadata": {
        "description": "User who requested the creation of this application."
      }
    },
    "ServiceClass": {
      "defaultValue": "Gold",
      "type": "string",
      "metadata": {
        "description": "Service level agreement level of the application, workload, or service."
      }
    },
    "StartDate": {
      "defaultValue": "2020-01-01",
      "type": "string",
      "metadata": {
        "description": "Date when the application, workload, or service was first deployed."
      }
    }
  },
  "variables": {
    "logicAppName": "[concat('la-', parameters('DataFactoryName'), '-alert')]"
  },
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Send_an_email_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "To": "@triggerBody()?['EmailTo']",
                  "Subject": "@triggerBody()?['Subject']",
                  "Body": "<ul>\n  <li><strong>The data factory:</strong> @{triggerBody()?['DataFactoryName']}</li>\n  <li><strong>The pipeline:</strong> @{triggerBody()?['PipelineName']}</li>\n  <li><strong>The failed activity: </strong>@{triggerBody()?['Activity']}</li>\n  <li><strong>Error message: </strong><span style=\"color: rgb(184,49,47)\"></span><span style=\"color: rgb(184,49,47)\">@{triggerBody()?['ErrorMessage']}</span><span style=\"color: rgb(184,49,47)\"></span></li>\n</ul>"
                },
                "path": "/v2/Mail"
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "Activity": {
                      "type": "string"
                    },
                    "DataFactoryName": {
                      "type": "string"
                    },
                    "EmailTo": {
                      "type": "string"
                    },
                    "ErrorMessage": {
                      "type": "string"
                    },
                    "PipelineName": {
                      "type": "string"
                    },
                    "Subject": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[concat('la-', parameters('DataFactoryName'), '-alert')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Display Name": "[concat('logic app: la-', parameters('DataFactoryName'), '-alert')]",
        "Application name": "[parameters('ApplicationName')]",
        "Approver name": "[parameters('Approver')]",
        "Budget required-approved": "[parameters('BudgetAmount')]",
        "Business unit": "[parameters('BusinessUnit')]",
        "Cost center": "[parameters('CostCenter')]",
        "Disaster recovery": "[parameters('DR')]",
        "End date of the project": "[parameters('EndDate')]",
        "Environment": "[parameters('Env')]",
        "Owner name": "[parameters('Owner')]",
        "Requester name": "[parameters('Requester')]",
        "Service class": "[parameters('ServiceClass')]",
        "Start date of the project": "[parameters('StartDate')]"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('Owner')]"
      }
    },
    {
      "name": "[concat(parameters('DataFactoryName'), '/failure-notification-pipeline')]",
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "properties": {
        "activities": [
          {
            "name": "Send-Failure-Email",
            "type": "WebActivity",
            "dependsOn": [],
            "policy": {
              "timeout": "7.00:00:00",
              "retry": 0,
              "retryIntervalInSeconds": 30,
              "secureOutput": false,
              "secureInput": false
            },
            "userProperties": [],
            "typeProperties": {
              "url": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', variables('logicAppName')), '/triggers/manual'), '2016-06-01').value]",
              "method": "POST",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": {
                "value": "{\"EmailTo\": \"@{pipeline().parameters.EmailTo}\",\n\"Subject\": \"An error has occured in the @{pipeline().parameters.PipelineName}\",\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"PipelineName\": \"@{pipeline().parameters.PipelineName}\",\n\"Activity\": \"@{pipeline().parameters.Activity}\",\n\"ErrorMessage\": \"@{pipeline().parameters.ErrorMessage}\"}",
                "type": "Expression"
              }
            }
          }
        ],
        "parameters": {
          "EmailTo": {
            "type": "string"
          },
          "Activity": {
            "type": "string"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "PipelineName": {
            "type": "string"
          }
        },
        "annotations": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('logicAppName'))]"
      ]
    }
  ],
  "outputs": {
    "data-factory-name": {
      "type": "string",
      "value": "[parameters('DataFactoryName')]"
    }
  }
}
